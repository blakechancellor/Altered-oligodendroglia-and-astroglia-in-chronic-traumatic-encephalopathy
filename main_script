#Set working directory to location of count matrices
setwd("~/folder_with_counts")

#Load libraries for analyses
library(Seurat)
library(stringi)
library(scater)
library(ggplot2)
library(cowplot)
library(dplyr)
library(MAST)

#Function to track biological replicates
substrRight <- function(x, n){
  substr(x, nchar(x)-n+1, nchar(x))
}

#Load matrices into R
#Control
control.1.1.data <- readSparseCounts("L5024_Control_0919_1.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.1.2.data <- readSparseCounts("L5024_Control_0919_2.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.1.3.data <- readSparseCounts("L5024_Control_0919_3.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.2.1.data <- readSparseCounts("L5205_Control_0919_1.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.2.2.data <- readSparseCounts("L5205_Control_0919_2.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.2.3.data <- readSparseCounts("L5205_Control_0919_3.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.2.4.data <- readSparseCounts("L5205_Control_0930_1.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.2.5.data <- readSparseCounts("L5205_Control_0930_2.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.2.6.data <- readSparseCounts("L5205_Control_0930_3.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.3.1.data <- readSparseCounts("L5212_Control_0919_1.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.3.2.data <- readSparseCounts("L5212_Control_0919_2.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.3.3.data <- readSparseCounts("L5212_Control_0919_3.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.4.1.data <- readSparseCounts("L5618_Control_0709_1.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.4.2.data <- readSparseCounts("L5618_Control_0709_2.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.4.3.data <- readSparseCounts("L5618_Control_0709_3.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.4.4.data <- readSparseCounts("L5618_Control_0904_1.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.4.5.data <- readSparseCounts("L5618_Control_0904_2.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.5.1.data <- readSparseCounts("L5864_Control_0418_1.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.5.2.data <- readSparseCounts("L5864_Control_0418_2.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.5.3.data <- readSparseCounts("L5864_Control_0418_3.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.5.4.data <- readSparseCounts("L5864_Control_0904_1.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.5.5.data <- readSparseCounts("L5864_Control_0904_2.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.5.6.data <- readSparseCounts("L5864_Control_0904_3.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.5.7.data <- readSparseCounts("L5864_Control_0930_1.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.5.8.data <- readSparseCounts("L5864_Control_0930_2.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.5.9.data <- readSparseCounts("L5864_Control_0930_3.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.6.1.data <- readSparseCounts("L6020_Control_0709_1.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.6.2.data <- readSparseCounts("L6020_Control_0709_2.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.6.3.data <- readSparseCounts("L6020_Control_0709_3.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.6.4.data <- readSparseCounts("L6020_Control_0904_1.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.6.5.data <- readSparseCounts("L6020_Control_0904_2.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.6.6.data <- readSparseCounts("L6020_Control_0904_3.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.7.1.data <- readSparseCounts("L6085_Control_0709_1.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.7.2.data <- readSparseCounts("L6085_Control_0709_2.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.7.3.data <- readSparseCounts("L6085_Control_0709_3.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.7.4.data <- readSparseCounts("L6085_Control_0904_1.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.7.5.data <- readSparseCounts("L6085_Control_0904_2.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.7.6.data <- readSparseCounts("L6085_Control_0904_3.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.7.7.data <- readSparseCounts("L6085_Control_0930_1.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.7.8.data <- readSparseCounts("L6085_Control_0930_2.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.7.9.data <- readSparseCounts("L6085_Control_0930_3.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.8.1.data <- readSparseCounts("L6119_Control_0919_1.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.8.2.data <- readSparseCounts("L6119_Control_0919_2.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.8.3.data <- readSparseCounts("L6119_Control_0919_3.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.8.4.data <- readSparseCounts("L6119_Control_0930_1.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.8.5.data <- readSparseCounts("L6119_Control_0930_2.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
control.8.6.data <- readSparseCounts("L6119_Control_0930_3.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)

#CTE
CTE.1.1.data <- readSparseCounts("K177_CTE_0418_1.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
CTE.1.2.data <- readSparseCounts("K177_CTE_0418_2.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
CTE.1.3.data <- readSparseCounts("K177_CTE_0418_3.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
CTE.1.4.data <- readSparseCounts("K177_CTE_0904_1.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
CTE.1.5.data <- readSparseCounts("K177_CTE_0904_2.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
CTE.1.6.data <- readSparseCounts("K177_CTE_0904_3.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
CTE.2.1.data <- readSparseCounts("K18_CTE_0709_1.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
CTE.2.2.data <- readSparseCounts("K18_CTE_0709_3.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
CTE.2.3.data <- readSparseCounts("K18_CTE_0904_1.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
CTE.2.4.data <- readSparseCounts("K18_CTE_0904_2.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
CTE.2.5.data <- readSparseCounts("K18_CTE_0904_3.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
CTE.3.1.data <- readSparseCounts("SLI124_CTE_0709_2.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
CTE.3.2.data <- readSparseCounts("SLI124_CTE_0709_3.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
CTE.3.3.data <- readSparseCounts("SLI124_CTE_0904_1.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
CTE.3.4.data <- readSparseCounts("SLI124_CTE_0904_2.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
CTE.3.5.data <- readSparseCounts("SLI124_CTE_0904_3.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
CTE.4.1.data <- readSparseCounts("SLI131_CTE_0709_1.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
CTE.4.2.data <- readSparseCounts("SLI131_CTE_0709_2.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
CTE.4.3.data <- readSparseCounts("SLI131_CTE_0709_3.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
CTE.4.4.data <- readSparseCounts("SLI131_CTE_0904_1.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
CTE.4.5.data <- readSparseCounts("SLI131_CTE_0904_2.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
CTE.4.6.data <- readSparseCounts("SLI131_CTE_0904_3.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
CTE.5.1.data <- readSparseCounts("SLI135_CTE_0919_1.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
CTE.5.2.data <- readSparseCounts("SLI135_CTE_0919_2.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
CTE.5.3.data <- readSparseCounts("SLI135_CTE_0919_3.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
CTE.6.1.data <- readSparseCounts("K487_CTE_0919_1.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
CTE.6.2.data <- readSparseCounts("K487_CTE_0919_2.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
CTE.6.3.data <- readSparseCounts("K487_CTE_0919_3.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
CTE.7.1.data <- readSparseCounts("K151_CTE_0919_1.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
CTE.7.2.data <- readSparseCounts("K151_CTE_0919_2.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
CTE.7.3.data <- readSparseCounts("K151_CTE_0919_3.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
CTE.8.1.data <- readSparseCounts("K267_CTE_0919_1.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
CTE.8.2.data <- readSparseCounts("K267_CTE_0919_2.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)
CTE.8.3.data <- readSparseCounts("K267_CTE_0919_3.counts.tsv", sep = "\t", row.names = TRUE, col.names = TRUE)

#inDrops files need to be transposed for Seurat
control.1.1.data <- t(control.1.1.data)
control.1.2.data <- t(control.1.2.data)
control.1.3.data <- t(control.1.3.data)
control.2.1.data <- t(control.2.1.data)
control.2.2.data <- t(control.2.2.data)
control.2.3.data <- t(control.2.3.data)
control.2.4.data <- t(control.2.4.data)
control.2.5.data <- t(control.2.5.data)
control.2.6.data <- t(control.2.6.data)
control.3.1.data <- t(control.3.1.data)
control.3.2.data <- t(control.3.2.data)
control.3.3.data <- t(control.3.3.data)
control.4.1.data <- t(control.4.1.data)
control.4.2.data <- t(control.4.2.data)
control.4.3.data <- t(control.4.3.data)
control.4.4.data <- t(control.4.4.data)
control.4.5.data <- t(control.4.5.data)
control.5.1.data <- t(control.5.1.data)
control.5.2.data <- t(control.5.2.data)
control.5.3.data <- t(control.5.3.data)
control.5.4.data <- t(control.5.4.data)
control.5.5.data <- t(control.5.5.data)
control.5.6.data <- t(control.5.6.data)
control.5.7.data <- t(control.5.7.data)
control.5.8.data <- t(control.5.8.data)
control.5.9.data <- t(control.5.9.data)
control.6.1.data <- t(control.6.1.data)
control.6.2.data <- t(control.6.2.data)
control.6.3.data <- t(control.6.3.data)
control.6.4.data <- t(control.6.4.data)
control.6.5.data <- t(control.6.5.data)
control.6.6.data <- t(control.6.6.data)
control.7.1.data <- t(control.7.1.data)
control.7.2.data <- t(control.7.2.data)
control.7.3.data <- t(control.7.3.data)
control.7.4.data <- t(control.7.4.data)
control.7.5.data <- t(control.7.5.data)
control.7.6.data <- t(control.7.6.data)
control.7.7.data <- t(control.7.7.data)
control.7.8.data <- t(control.7.8.data)
control.7.9.data <- t(control.7.9.data)
control.8.1.data <- t(control.8.1.data)
control.8.2.data <- t(control.8.2.data)
control.8.3.data <- t(control.8.3.data)
control.8.4.data <- t(control.8.4.data)
control.8.5.data <- t(control.8.5.data)
control.8.6.data <- t(control.8.6.data)

CTE.1.1.data <- t(CTE.1.1.data)
CTE.1.2.data <- t(CTE.1.2.data)
CTE.1.3.data <- t(CTE.1.3.data)
CTE.1.4.data <- t(CTE.1.4.data)
CTE.1.5.data <- t(CTE.1.5.data)
CTE.1.6.data <- t(CTE.1.6.data)
CTE.2.1.data <- t(CTE.2.1.data)
CTE.2.2.data <- t(CTE.2.2.data)
CTE.2.3.data <- t(CTE.2.3.data)
CTE.2.4.data <- t(CTE.2.4.data)
CTE.2.5.data <- t(CTE.2.5.data)
CTE.3.1.data <- t(CTE.3.1.data)
CTE.3.2.data <- t(CTE.3.2.data)
CTE.3.3.data <- t(CTE.3.3.data)
CTE.3.4.data <- t(CTE.3.4.data)
CTE.3.5.data <- t(CTE.3.5.data)
CTE.4.1.data <- t(CTE.4.1.data)
CTE.4.2.data <- t(CTE.4.2.data)
CTE.4.3.data <- t(CTE.4.3.data)
CTE.4.4.data <- t(CTE.4.4.data)
CTE.4.5.data <- t(CTE.4.5.data)
CTE.4.6.data <- t(CTE.4.6.data)
CTE.5.1.data <- t(CTE.5.1.data)
CTE.5.2.data <- t(CTE.5.2.data)
CTE.5.3.data <- t(CTE.5.3.data)
CTE.6.1.data <- t(CTE.6.1.data)
CTE.6.2.data <- t(CTE.6.2.data)
CTE.6.3.data <- t(CTE.6.3.data)
CTE.7.1.data <- t(CTE.7.1.data)
CTE.7.2.data <- t(CTE.7.2.data)
CTE.7.3.data <- t(CTE.7.3.data)
CTE.8.1.data <- t(CTE.8.1.data)
CTE.8.2.data <- t(CTE.8.2.data)
CTE.8.3.data <- t(CTE.8.3.data)

#Add condition, biological replicate, and technical replicate identifiers
colnames(control.1.1.data) <- paste(colnames(control.1.1.data), "-control.1.1", sep="")
colnames(control.1.2.data) <- paste(colnames(control.1.2.data), "-control.1.2", sep="")
colnames(control.1.3.data) <- paste(colnames(control.1.3.data), "-control.1.3", sep="")
colnames(control.2.1.data) <- paste(colnames(control.2.1.data), "-control.2.1", sep="")
colnames(control.2.2.data) <- paste(colnames(control.2.2.data), "-control.2.2", sep="")
colnames(control.2.3.data) <- paste(colnames(control.2.3.data), "-control.2.3", sep="")
colnames(control.2.4.data) <- paste(colnames(control.2.4.data), "-control.2.4", sep="")
colnames(control.2.5.data) <- paste(colnames(control.2.5.data), "-control.2.5", sep="")
colnames(control.2.6.data) <- paste(colnames(control.2.6.data), "-control.2.6", sep="")
colnames(control.3.1.data) <- paste(colnames(control.3.1.data), "-control.3.1", sep="")
colnames(control.3.2.data) <- paste(colnames(control.3.2.data), "-control.3.2", sep="")
colnames(control.3.3.data) <- paste(colnames(control.3.3.data), "-control.3.3", sep="")
colnames(control.4.1.data) <- paste(colnames(control.4.1.data), "-control.4.1", sep="")
colnames(control.4.2.data) <- paste(colnames(control.4.2.data), "-control.4.2", sep="")
colnames(control.4.3.data) <- paste(colnames(control.4.3.data), "-control.4.3", sep="")
colnames(control.4.4.data) <- paste(colnames(control.4.4.data), "-control.4.4", sep="")
colnames(control.4.5.data) <- paste(colnames(control.4.5.data), "-control.4.5", sep="")
colnames(control.5.1.data) <- paste(colnames(control.5.1.data), "-control.5.1", sep="")
colnames(control.5.2.data) <- paste(colnames(control.5.2.data), "-control.5.2", sep="")
colnames(control.5.3.data) <- paste(colnames(control.5.3.data), "-control.5.3", sep="")
colnames(control.5.4.data) <- paste(colnames(control.5.4.data), "-control.5.4", sep="")
colnames(control.5.5.data) <- paste(colnames(control.5.5.data), "-control.5.5", sep="")
colnames(control.5.6.data) <- paste(colnames(control.5.6.data), "-control.5.6", sep="")
colnames(control.5.7.data) <- paste(colnames(control.5.7.data), "-control.5.7", sep="")
colnames(control.5.8.data) <- paste(colnames(control.5.8.data), "-control.5.8", sep="")
colnames(control.5.9.data) <- paste(colnames(control.5.9.data), "-control.5.9", sep="")
colnames(control.6.1.data) <- paste(colnames(control.6.1.data), "-control.6.1", sep="")
colnames(control.6.2.data) <- paste(colnames(control.6.2.data), "-control.6.2", sep="")
colnames(control.6.3.data) <- paste(colnames(control.6.3.data), "-control.6.3", sep="")
colnames(control.6.4.data) <- paste(colnames(control.6.4.data), "-control.6.4", sep="")
colnames(control.6.5.data) <- paste(colnames(control.6.5.data), "-control.6.5", sep="")
colnames(control.6.6.data) <- paste(colnames(control.6.6.data), "-control.6.6", sep="")
colnames(control.7.1.data) <- paste(colnames(control.7.1.data), "-control.7.1", sep="")
colnames(control.7.2.data) <- paste(colnames(control.7.2.data), "-control.7.2", sep="")
colnames(control.7.3.data) <- paste(colnames(control.7.3.data), "-control.7.3", sep="")
colnames(control.7.4.data) <- paste(colnames(control.7.4.data), "-control.7.4", sep="")
colnames(control.7.5.data) <- paste(colnames(control.7.5.data), "-control.7.5", sep="")
colnames(control.7.6.data) <- paste(colnames(control.7.6.data), "-control.7.6", sep="")
colnames(control.7.7.data) <- paste(colnames(control.7.7.data), "-control.7.7", sep="")
colnames(control.7.8.data) <- paste(colnames(control.7.8.data), "-control.7.8", sep="")
colnames(control.7.9.data) <- paste(colnames(control.7.9.data), "-control.7.9", sep="")
colnames(control.8.1.data) <- paste(colnames(control.8.1.data), "-control.8.1", sep="")
colnames(control.8.2.data) <- paste(colnames(control.8.2.data), "-control.8.2", sep="")
colnames(control.8.3.data) <- paste(colnames(control.8.3.data), "-control.8.3", sep="")
colnames(control.8.4.data) <- paste(colnames(control.8.4.data), "-control.8.4", sep="")
colnames(control.8.5.data) <- paste(colnames(control.8.5.data), "-control.8.5", sep="")
colnames(control.8.6.data) <- paste(colnames(control.8.6.data), "-control.8.6", sep="")
colnames(CTE.1.1.data) <- paste(colnames(CTE.1.1.data), "-CTE.1.1", sep="")
colnames(CTE.1.2.data) <- paste(colnames(CTE.1.2.data), "-CTE.1.2", sep="")
colnames(CTE.1.3.data) <- paste(colnames(CTE.1.3.data), "-CTE.1.3", sep="")
colnames(CTE.1.4.data) <- paste(colnames(CTE.1.4.data), "-CTE.1.4", sep="")
colnames(CTE.1.5.data) <- paste(colnames(CTE.1.5.data), "-CTE.1.5", sep="")
colnames(CTE.1.6.data) <- paste(colnames(CTE.1.6.data), "-CTE.1.6", sep="")
colnames(CTE.2.1.data) <- paste(colnames(CTE.2.1.data), "-CTE.2.1", sep="")
colnames(CTE.2.2.data) <- paste(colnames(CTE.2.2.data), "-CTE.2.2", sep="")
colnames(CTE.2.3.data) <- paste(colnames(CTE.2.3.data), "-CTE.2.3", sep="")
colnames(CTE.2.4.data) <- paste(colnames(CTE.2.4.data), "-CTE.2.4", sep="")
colnames(CTE.2.5.data) <- paste(colnames(CTE.2.5.data), "-CTE.2.5", sep="")
colnames(CTE.3.1.data) <- paste(colnames(CTE.3.1.data), "-CTE.3.1", sep="")
colnames(CTE.3.2.data) <- paste(colnames(CTE.3.2.data), "-CTE.3.2", sep="")
colnames(CTE.3.3.data) <- paste(colnames(CTE.3.3.data), "-CTE.3.3", sep="")
colnames(CTE.3.4.data) <- paste(colnames(CTE.3.4.data), "-CTE.3.4", sep="")
colnames(CTE.3.5.data) <- paste(colnames(CTE.3.5.data), "-CTE.3.5", sep="")
colnames(CTE.4.1.data) <- paste(colnames(CTE.4.1.data), "-CTE.4.1", sep="")
colnames(CTE.4.2.data) <- paste(colnames(CTE.4.2.data), "-CTE.4.2", sep="")
colnames(CTE.4.3.data) <- paste(colnames(CTE.4.3.data), "-CTE.4.3", sep="")
colnames(CTE.4.4.data) <- paste(colnames(CTE.4.4.data), "-CTE.4.4", sep="")
colnames(CTE.4.5.data) <- paste(colnames(CTE.4.5.data), "-CTE.4.5", sep="")
colnames(CTE.4.6.data) <- paste(colnames(CTE.4.6.data), "-CTE.4.6", sep="")
colnames(CTE.5.1.data) <- paste(colnames(CTE.5.1.data), "-CTE.5.1", sep="")
colnames(CTE.5.2.data) <- paste(colnames(CTE.5.2.data), "-CTE.5.2", sep="")
colnames(CTE.5.3.data) <- paste(colnames(CTE.5.3.data), "-CTE.5.3", sep="")
colnames(CTE.6.1.data) <- paste(colnames(CTE.6.1.data), "-CTE.6.1", sep="")
colnames(CTE.6.2.data) <- paste(colnames(CTE.6.2.data), "-CTE.6.2", sep="")
colnames(CTE.6.3.data) <- paste(colnames(CTE.6.3.data), "-CTE.6.3", sep="")
colnames(CTE.7.1.data) <- paste(colnames(CTE.7.1.data), "-CTE.7.1", sep="")
colnames(CTE.7.2.data) <- paste(colnames(CTE.7.2.data), "-CTE.7.2", sep="")
colnames(CTE.7.3.data) <- paste(colnames(CTE.7.3.data), "-CTE.7.3", sep="")
colnames(CTE.8.1.data) <- paste(colnames(CTE.8.1.data), "-CTE.8.1", sep="")
colnames(CTE.8.2.data) <- paste(colnames(CTE.8.2.data), "-CTE.8.2", sep="")
colnames(CTE.8.3.data) <- paste(colnames(CTE.8.3.data), "-CTE.8.3", sep="")

#Concatenate to counts-by-condition
control.data <- cbind(control.1.1.data, control.1.2.data, control.1.3.data, control.2.1.data, control.2.2.data, control.2.3.data, control.2.4.data, control.2.5.data, control.2.6.data, control.3.1.data, control.3.2.data, control.3.3.data, control.4.1.data, control.4.2.data, control.4.3.data, control.4.4.data, control.4.5.data, control.5.1.data, control.5.2.data, control.5.3.data, control.5.4.data, control.5.5.data, control.5.6.data, control.5.7.data, control.5.8.data, control.5.9.data, control.6.1.data, control.6.2.data, control.6.3.data, control.6.4.data, control.6.5.data, control.6.6.data, control.7.1.data, control.7.2.data, control.7.3.data, control.7.4.data, control.7.5.data, control.7.6.data, control.7.7.data, control.7.8.data, control.7.9.data, control.8.1.data, control.8.2.data, control.8.3.data, control.8.4.data, control.8.5.data, control.8.6.data)

CTE.data <- cbind(CTE.1.1.data, CTE.1.2.data, CTE.1.3.data, CTE.1.4.data, CTE.1.5.data, CTE.1.6.data, CTE.2.1.data, CTE.2.2.data, CTE.2.3.data, CTE.2.4.data, CTE.2.5.data, CTE.3.1.data, CTE.3.2.data, CTE.3.3.data, CTE.3.4.data, CTE.3.5.data, CTE.4.1.data, CTE.4.2.data, CTE.4.3.data, CTE.4.4.data, CTE.4.5.data, CTE.4.6.data, CTE.5.1.data, CTE.5.2.data, CTE.5.3.data, CTE.6.1.data, CTE.6.2.data, CTE.6.3.data, CTE.7.1.data, CTE.7.2.data, CTE.7.3.data, CTE.8.1.data, CTE.8.2.data, CTE.8.3.data)

#Build control Seurat object with quality control.
Control <- CreateSeuratObject(counts = control.data, project = "Control")
Control$condition <- "Control"
Control$bio_rep <- substr(substrRight(rownames(Control@meta.data), 3), 1, 1)
Control <- PercentageFeatureSet(object = Control, pattern = "^MT-", col.name = "percent.mt")
Control <- subset(x = Control, subset = nFeature_RNA > 420 & nFeature_RNA < 2500 & percent.mt < 1)
L5024 <- rep("L5024", 406)
L5205 <- rep("L5205", 1485)
L5212 <- rep("L5212", 629)
L5618 <- rep("L5618", 1426)
L5864 <- rep("L5864", 5838)
L6020 <- rep("L6020", 2174)
L6085 <- rep("L6085", 2429)
L6119 <- rep("L6119", 1410)
control_sample <- c(L5024, L5205, L5212, L5618, L5864, L6020, L6085, L6119)
Control$subject <- control_sample
Control <- SCTransform(object = Control, vars.to.regress = "percent.mt")

#Build CTE Seurat object with quality control.
CTE <- CreateSeuratObject(counts = CTE.data, project = "CTE")
CTE$condition <- "CTE"
CTE$bio_rep <- substr(substrRight(rownames(CTE@meta.data), 3), 1, 1)
CTE <- PercentageFeatureSet(object = CTE, pattern = "^MT-", col.name = "percent.mt")
CTE <- subset(x = CTE, subset = nFeature_RNA > 400 & nFeature_RNA < 2500 & percent.mt < 1)
K177 <- rep("K177", 2717)
K18 <- rep("K18", 614)
SLI124 <- rep("SLI124", 951)
SLI131 <- rep("SLI131", 2276)
SLI135 <- rep("SLI135", 262)
K487 <- rep("K487", 749)
K151 <- rep("K151", 1118)
K267 <- rep("K267", 251)
cte_sample <- c(K177, K18, SLI124, SLI131, SLI135, K487, K151, K267)
CTE$subject <- cte_sample
CTE <- SCTransform(object = CTE, vars.to.regress = "percent.mt")

#Integrate Seurat objects.
CTE.anchors <- FindIntegrationAnchors(object.list = list(Control, CTE), anchor.features = 3000, dims = 1:30)
CTE.combined <- IntegrateData(anchorset = CTE.anchors, dims = 1:30)

#Scale data and reduce dimensionality with tSNE 
CTE.combined <- ScaleData(object = CTE.combined)
CTE.combined <- RunPCA(object = CTE.combined, npcs = 100, verbose = FALSE)
ElbowPlot(object = CTE.combined, ndims = 30)
CTE.combined <- RunTSNE(object = CTE.combined, reduction = "pca", dims = 1:23, n.epochs = 600, parallel = FALSE,check_duplicates = FALSE)
CTE.combined <- FindNeighbors(object = CTE.combined, reduction = "pca", dims = 1:23)
CTE.combined <- FindClusters(CTE.combined, resolution = 0.8)

#Set default assay to SCT
DefaultAssay(object = CTE.combined) <- "SCT"

#Visualize initial tSNE
DimPlot(CTE.combined, reduction = "tsne", label = TRUE) 

#Find marker genes for each cluster, this produces lists that are in Supplementary Table 3
cluster0.markers <- FindMarkers(object = CTE.combined, ident.1 = 0, logfc.threshold = 0.1, test.use = "roc", only.pos = FALSE)
head(x = cluster0.markers, n = 100)
cluster1.markers <- FindMarkers(object = CTE.combined, ident.1 = 1, logfc.threshold = 0.1, test.use = "roc", only.pos = FALSE)
head(x = cluster1.markers, n = 100)
cluster2.markers <- FindMarkers(object = CTE.combined, ident.1 = 2, logfc.threshold = 0.1, test.use = "roc", only.pos = FALSE)
head(x = cluster2.markers, n = 100)
cluster3.markers <- FindMarkers(object = CTE.combined, ident.1 = 3, logfc.threshold = 0.1, test.use = "roc", only.pos = FALSE)
head(x = cluster3.markers, n = 100)
cluster4.markers <- FindMarkers(object = CTE.combined, ident.1 = 4, logfc.threshold = 0.1, test.use = "roc", only.pos = FALSE)
head(x = cluster4.markers, n = 100)
cluster5.markers <- FindMarkers(object = CTE.combined, ident.1 = 5, logfc.threshold = 0.1, test.use = "roc", only.pos = FALSE)
head(x = cluster5.markers, n = 100)
cluster6.markers <- FindMarkers(object = CTE.combined, ident.1 = 6, logfc.threshold = 0.1, test.use = "roc", only.pos = FALSE)
head(x = cluster6.markers, n = 100)
cluster7.markers <- FindMarkers(object = CTE.combined, ident.1 = 7, logfc.threshold = 0.1, test.use = "roc", only.pos = FALSE)
head(x = cluster7.markers, n = 100)
cluster8.markers <- FindMarkers(object = CTE.combined, ident.1 = 8, logfc.threshold = 0.1, test.use = "roc", only.pos = FALSE)
head(x = cluster8.markers, n = 100)
cluster9.markers <- FindMarkers(object = CTE.combined, ident.1 = 9, logfc.threshold = 0.1, test.use = "roc", only.pos = FALSE)
head(x = cluster9.markers, n = 100)
cluster10.markers <- FindMarkers(object = CTE.combined, ident.1 = 10, logfc.threshold = 0.1, test.use = "roc", only.pos = FALSE)
head(x = cluster10.markers, n = 100)
cluster11.markers <- FindMarkers(object = CTE.combined, ident.1 = 11, logfc.threshold = 0.1, test.use = "roc", only.pos = FALSE)
head(x = cluster11.markers, n = 100)
cluster12.markers <- FindMarkers(object = CTE.combined, ident.1 = 12, logfc.threshold = 0.1, test.use = "roc", only.pos = FALSE)
head(x = cluster12.markers, n = 100)
cluster13.markers <- FindMarkers(object = CTE.combined, ident.1 = 13, logfc.threshold = 0.1, test.use = "roc", only.pos = FALSE)
head(x = cluster13.markers, n = 100)
cluster14.markers <- FindMarkers(object = CTE.combined, ident.1 = 14, logfc.threshold = 0.1, test.use = "roc", only.pos = FALSE)
head(x = cluster14.markers, n = 100)
cluster15.markers <- FindMarkers(object = CTE.combined, ident.1 = 15, logfc.threshold = 0.1, test.use = "roc", only.pos = FALSE)
head(x = cluster15.markers, n = 100)
cluster16.markers <- FindMarkers(object = CTE.combined, ident.1 = 16, logfc.threshold = 0.1, test.use = "roc", only.pos = FALSE)
head(x = cluster16.markers, n = 100)
cluster17.markers <- FindMarkers(object = CTE.combined, ident.1 = 17, logfc.threshold = 0.1, test.use = "roc", only.pos = FALSE)
head(x = cluster17.markers, n = 100)

#Label tSNE by cell types
CTE.combined <- RenameIdents(object = CTE.combined, `0` = "OL1", `1` = "OL2", `2` = "OL3", `3` = "OL4", `4` = "Astrocyte1", `5` = "OPC1", `6` = "OL5", `7` = "Exc_Neuron1", `8` = "Microglia", `9` = "OPC2", `10` = "Astrocyte2", `11` = "OL6", `12` = "Astrocyte3", `13` = "OL7", `14` = "Int_Neuron", `15` = "Exc_Neuron2", `16` = "OL8", `17` = "Endo")

#Produce a dot plot to visualize marker genes
Idents(object = CTE.combined) <- factor(x = Idents(object = CTE.combined), levels = c("OL1", "OL2", "OL3", "OL4", "Astrocyte1", "OPC1", "OL5", "Exc_Neuron1", "Microglia", "OPC2", "Astrocyte2", "OL6", "Astrocyte3", "OL7", "Int_Neuron", "Exc_Neuron2", "OL8", "Endo"))
markers.to.plot <- c("PLP1", "GFAP", "VCAN", "CD74", "NRGN", "GAD1", "CLDN5")
DotPlot(object = CTE.combined, features = rev(x = markers.to.plot), cols = c("navy", "lightgray"), 
        dot.scale = 8, split.by = "condition") + RotatedAxis()

#Prepare data for variety of differential gene expression analyses
CTE.combined$celltype.stim <- paste(Idents(object = CTE.combined), CTE.combined$condition, sep = "_")
CTE.combined$celltype <- Idents(object = CTE.combined)
Idents(object = CTE.combined) <- "celltype.stim"
main.response <- FindMarkers(object = CTE.combined, ident.1 = c(input_1), ident.2 = c(input_2), verbose = FALSE, test.use = "MAST")
head(x = main.response, n = 500)

#Subset each celltype 
###SUBSET OLs###
OLs <- SubsetData(object = CTE.combined, ident.use = c("OL1", "OL2", "OL3", "OL4", "OL5", "OL6", "OL7", "OL8"), do.clean = TRUE, do.scale = TRUE)
#Set assay to integrated
DefaultAssay(object = OLs) <- "integrated"
# Run the standard workflow for visualization and clustering
OLs <- ScaleData(object = OLs)
OLs <- RunPCA(object = OLs, npcs = 100, verbose = FALSE)
ElbowPlot(object = OLs, ndims = 20)
OLs <- RunTSNE(object = OLs, reduction = "pca", dims = 1:8, n.epochs = 600, parallel = FALSE,check_duplicates = FALSE)
OLs <- FindNeighbors(object = OLs, reduction = "pca", dims = 1:8)
OLs <- FindClusters(OLs, resolution = 0.455)
#Set assay to SCT
DefaultAssay(object = OLs) <- "SCT"
#Produce initial tSNE
DimPlot(OLs, reduction = "tsne", label = TRUE)

###SUBSET Astrocytes###
astros <- SubsetData(object = CTE.combined, ident.use = c("Astrocyte1", "Astrocyte2", "Astrocyte3"), do.clean = TRUE, do.scale = TRUE)
#Set assay to integrated
DefaultAssay(object = astros) <- "integrated"
# Run the standard workflow for visualization and clustering
astros <- ScaleData(object = astros)
astros <- RunPCA(object = astros, npcs = 100, verbose = FALSE)
ElbowPlot(object = astros, ndims = 20)
astros <- RunTSNE(object = astros, reduction = "pca", dims = 1:8, n.epochs = 600, parallel = FALSE,check_duplicates = FALSE)
astros <- FindNeighbors(object = astros, reduction = "pca", dims = 1:8)
astros <- FindClusters(astros, resolution = 0.1)
#Set assay to SCT
DefaultAssay(object = astros) <- "SCT"
#Produce initial tSNE
DimPlot(astros, reduction = "tsne", label = TRUE)

###SUBSET OPCs###
OPCs <- SubsetData(object = CTE.combined, ident.use = c("OPC1", "OPC2"), do.clean = TRUE, do.scale = TRUE)
#Set assay to integrated
DefaultAssay(object = OPCs) <- "integrated"
# Run the standard workflow for visualization and clustering
OPCs <- ScaleData(object = OPCs)
OPCs <- RunPCA(object = OPCs, npcs = 100, verbose = FALSE)
ElbowPlot(object = OPCs, ndims = 20)
OPCs <- RunTSNE(object = OPCs, reduction = "pca", dims = 1:23, n.epochs = 600, parallel = FALSE,check_duplicates = FALSE)
OPCs <- FindNeighbors(object = OPCs, reduction = "pca", dims = 1:23)
OPCs <- FindClusters(OPCs, resolution = 0.1)
#Set assay to SCT
DefaultAssay(object = OPCs) <- "SCT"
#Produce initial tSNE
DimPlot(OPCs, reduction = "tsne", label = TRUE)

##########The remaining code will produce each panel from each figure##########
#Fig.1b
DimPlot(CTE.combined, reduction = "tsne", label = TRUE) 
DimPlot(object = CTE.combined, reduction = "tsne", group.by = "condition", label = FALSE) 
DimPlot(object = CTE.combined, reduction = "tsne", group.by = "subject", label = FALSE)

#Fig.1c
FeaturePlot(object = CTE.combined, reduction = "tsne", features = c("PLP1"), min.cutoff = "q9", cols = c("lightgrey", "red1"), pt.size = 1.5)
FeaturePlot(object = CTE.combined, reduction = "tsne", features = c("AQP4"), min.cutoff = "q9", cols = c("lightgrey", "red1"), pt.size = 1.5)
FeaturePlot(object = CTE.combined, reduction = "tsne", features = c("VCAN"), min.cutoff = "q9", cols = c("lightgrey", "red1"), pt.size = 1.5)
FeaturePlot(object = CTE.combined, reduction = "tsne", features = c("CD74"), min.cutoff = "q9", cols = c("lightgrey", "red1"), pt.size = 1.5)
FeaturePlot(object = CTE.combined, reduction = "tsne", features = c("NRGN"), min.cutoff = "q9", cols = c("lightgrey", "red1"), pt.size = 1.5)
FeaturePlot(object = CTE.combined, reduction = "tsne", features = c("GAD1"), min.cutoff = "q9", cols = c("lightgrey", "red1"), pt.size = 1.5)
FeaturePlot(object = CTE.combined, reduction = "tsne", features = c("CLDN5"), min.cutoff = "q9", cols = c("lightgrey", "red1"), pt.size = 1.5)

#Fig. 1d 
#For this panel, the input is a matrix with a column for sample, a column for cell type, and a column for normalized cell count
all_cells <- read.csv(file = 'all_cells_bubble.csv')
p <- ggplot(all_cells, aes(Cell_Type, Sample))
p + geom_point(aes(size = Cell_Count)) + scale_size(range = c(0.00000000001,10)) + RotatedAxis()

#Supplementary Fig. 1e 
FeaturePlot(object = CTE.combined, reduction = "tsne", features = "nFeature_SCT", min.cutoff = "q9", cols = c("lightblue", "yellow", "orangered1")) 

#Supplementary Fig. 1f 
FeaturePlot(object = CTE.combined, reduction = "tsne", features = "nCount_SCT", min.cutoff = "q9", cols = c("lightblue", "yellow", "orangered1")) 

#Supplementary Fig. 1g 
VlnPlot(CTE.combined, features = c("nFeature_SCT", "nCount_SCT"), ncol = 2, pt.size = 0)

#Supplementary Fig. 1h 
ElbowPlot(object = CTE.combined, ndims = 30)

#Fig. 2a 
DimPlot(OLs, reduction = "tsne", label = TRUE)

#Fig. 2e
all_ols <- subset(OLs, idents = c("OL1_CTE", "OL2_CTE", "OL3_CTE", "OL4_CTE", "OL5_CTE", "OL6_CTE", "OL7_CTE", "OL8_CTE", "OL1_Control", "OL2_Control", "OL3_Control", "OL4_Control", "OL5_Control", "OL6_Control", "OL7_Control", "OL8_Control"))
Idents(all_ols) <- "condition"
avg.all_ols <- log1p(AverageExpression(all_ols, verbose = FALSE)$SCT)
avg.all_ols$gene <- rownames(avg.all_ols)

genes.to.label = c("FTH1", "CRYAB")
p <- ggplot(avg.all_ols, aes(Control, CTE)) + geom_point() + ggtitle("Oligodendrocytes")
p <- LabelPoints(plot = p1, points = genes.to.label, repel = TRUE)
plot_grid(p)

#Supplementary Fig. 2 
DotPlot(CTE.combined, features = (c("PLP1", "GFAP", "VCAN", "CD74", "NRGN", "GAD1", "CLDN5"))) + RotatedAxis() + coord_flip()

#Supplementary Fig. 4a 
DimPlot(OPCs, reduction = "tsne", label = TRUE)

#Fig. 3a 
DimPlot(OLs, reduction = "tsne", label = TRUE)

#Fig. 3c 
VlnPlot(OLs, features = c("FTH1", "FTL", "CRYAB"), slot = "counts", log = TRUE, group.by = "condition", pt.size = 0)

#Fig. 3d
OL6 <- subset(OLs, idents = "OL6")
Idents(OL6) <- "condition"
avg.ol6 <- log1p(AverageExpression(OL6, verbose = FALSE)$SCT)
avg.ol6$gene <- rownames(avg.ol6)

genes.to.label = c("FTH1", "CRYAB")
p <- ggplot(avg.ol6, aes(Control, CTE)) + geom_point() + ggtitle("OL6")
p <- LabelPoints(plot = p1, points = genes.to.label, repel = TRUE)
plot_grid(p)

#Fig. 4a 
DimPlot(astros, reduction = "tsne", label = TRUE)

#Fig. 4c
VlnPlot(astros, features = c("CD44", "BCL6"), slot = "counts", log = TRUE, group.by = "condition", pt.size = 0)

#Fig. 4d 
FeaturePlot(object = astros, reduction = "tsne", features = c("CD44"), min.cutoff = "q9", cols = c("grey90", "brown1"), pt.size = 2)
FeaturePlot(object = astros, reduction = "tsne", features = c("BCL6"), min.cutoff = "q9", cols = c("grey90", "brown1"), pt.size = 2)
FeaturePlot(object = astros, reduction = "tsne", features = c("GFAP"), min.cutoff = "q9", cols = c("grey90", "brown1"), pt.size = 2)

#Fig. 4g 

#Supplementary Fig. 6a 
DimPlot(astros, reduction = "tsne", label = TRUE)

#Supplementary Table 2 

#Supplementary Table 3

#Supplementary Table 4

#Supplementary Table 5

#Supplementary Table 6
all_cells <- table(CTE.combined@meta.data$subject, CTE.combined@meta.data$celltype)
write.table(all_cells, file="cells.tsv")

ol_cells <- table(OLs1@meta.data$subject, OLs1@meta.data$celltype)
write.table(ol_cells, file = "ol_cells.tsv")

astro_cells <- table(astros@meta.data$subject, astros@meta.data$celltype)
write.table(astro_cells, file="astro_cells.tsv")

opc_cells = table(OPCs@meta.data$subject, OPCs@meta.data$celltype)
write.table(opc_cells, file="opc_cells.tsv")
