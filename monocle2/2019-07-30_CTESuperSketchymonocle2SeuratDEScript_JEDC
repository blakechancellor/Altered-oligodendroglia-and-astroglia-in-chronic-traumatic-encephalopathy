#---------- Clustering in Monocle ----------


#Cluster cells visually if the boundaries are defined clearly enough.
OPC <- point.data[point.data$CellType == "OPC",]$sample_name
OLL1 <- subset(point.data, (data_dim_1 < -1) & CellType != "OPC")$sample_name
OLL2 <- subset(point.data, (data_dim_1 > -1) & (data_dim_1 < -0.4))$sample_name
OLL3 <- subset(point.data, (data_dim_1 > -0.46) & (data_dim_1 < 0))$sample_name
OLL4 <- subset(point.data, (data_dim_1 > 0) & (data_dim_1 < 0.6))$sample_name
OLL5 <- subset(point.data, (data_dim_1 > 0.629) & (data_dim_1 < 1))$sample_name
OLL6 <- subset(point.data, (data_dim_1 > 1) & (data_dim_1 < 1.2))$sample_name
OLL7 <- subset(point.data, data_dim_1 > 1.296)$sample_name

#Add OLL subgroup metadata to monocle object.
cds_OLL_all@phenoData$OLL_group <- 1
for (i in 1:length(OPC)) {
  if (any(rownames(cds_OLL_all@phenoData) == OPC[i])) {
    cds_OLL_all$OLL_group[which(rownames(cds_OLL_all@phenoData) == OPC[i])] <- "OPC"
  }
}
for (i in 1:length(OLL1)) {
  if (any(rownames(cds_OLL_all@phenoData) == OLL1[i])) {
    cds_OLL_all$OLL_group[which(rownames(cds_OLL_all@phenoData) == OLL1[i])] <- "OLL1"
  }
}
for (i in 1:length(OLL2)) {
  if (any(rownames(cds_OLL_all@phenoData) == OLL2[i])) {
    cds_OLL_all$OLL_group[which(rownames(cds_OLL_all@phenoData) == OLL2[i])] <- "OLL2"
  }
}
for (i in 1:length(OLL3)) {
  if (any(rownames(cds_OLL_all@phenoData) == OLL3[i])) {
    cds_OLL_all$OLL_group[which(rownames(cds_OLL_all@phenoData) == OLL3[i])] <- "OLL3"
  }
}
for (i in 1:length(OLL4)) {
  if (any(rownames(cds_OLL_all@phenoData) == OLL4[i])) {
    cds_OLL_all$OLL_group[which(rownames(cds_OLL_all@phenoData) == OLL4[i])] <- "OLL4"
  }
}
for (i in 1:length(OLL5)) {
  if (any(rownames(cds_OLL_all@phenoData) == OLL5[i])) {
    cds_OLL_all$OLL_group[which(rownames(cds_OLL_all@phenoData) == OLL5[i])] <- "OLL5"
  }
}
for (i in 1:length(OLL6)) {
  if (any(rownames(cds_OLL_all@phenoData) == OLL6[i])) {
    cds_OLL_all$OLL_group[which(rownames(cds_OLL_all@phenoData) == OLL6[i])] <- "OLL6"
  }
}
for (i in 1:length(OLL7)) {
  if (any(rownames(cds_OLL_all@phenoData) == OLL7[i])) {
    cds_OLL_all$OLL_group[which(rownames(cds_OLL_all@phenoData) == OLL7[i])] <- "OLL7"
  }
}

#For all undefined cells, add them to the largest category so they have the smallest effect on mean transcriptomic profile.
for (i in 1:7000) {
  if (cds_OLL_all$OLL_group[i] == 1) {
    cds_OLL_all$OLL_group[i] <- "OLL1"
  }
}

#Factor OLL subgroup metadata.
factor(cds_OLL_all$OLL_group)


#---------- Differential Expression in Monocle ----------


#Add OLL subgroup columns.
cds_OLL_all@phenoData$is.OPC <- 1
cds_OLL_all@phenoData$is.OLL1 <- 1
cds_OLL_all@phenoData$is.OLL2 <- 1
cds_OLL_all@phenoData$is.OLL3 <- 1
cds_OLL_all@phenoData$is.OLL4 <- 1
cds_OLL_all@phenoData$is.OLL5 <- 1
cds_OLL_all@phenoData$is.OLL6 <- 1
cds_OLL_all@phenoData$is.OLL7 <- 1
for (i in 1:length(rownames(cds_OLL_all@phenoData))) {
  if (cds_OLL_all$OLL_group[i] == "OPC") {
    cds_OLL_all$is.OPC[i] <- TRUE
  } else {
    cds_OLL_all$is.OPC[i] <- FALSE
  }
}
for (i in 1:length(rownames(cds_OLL_all@phenoData))) {
  if (cds_OLL_all$OLL_group[i] == "OLL1") {
    cds_OLL_all$is.OLL1[i] <- TRUE
  } else {
    cds_OLL_all$is.OLL1[i] <- FALSE
  }
}
for (i in 1:length(rownames(cds_OLL_all@phenoData))) {
  if (cds_OLL_all$OLL_group[i] == "OLL2") {
    cds_OLL_all$is.OLL2[i] <- TRUE
  } else {
    cds_OLL_all$is.OLL2[i] <- FALSE
  }
}
for (i in 1:length(rownames(cds_OLL_all@phenoData))) {
  if (cds_OLL_all$OLL_group[i] == "OLL3") {
    cds_OLL_all$is.OLL3[i] <- TRUE
  } else {
    cds_OLL_all$is.OLL3[i] <- FALSE
  }
}
for (i in 1:length(rownames(cds_OLL_all@phenoData))) {
  if (cds_OLL_all$OLL_group[i] == "OLL4") {
    cds_OLL_all$is.OLL4[i] <- TRUE
  } else {
    cds_OLL_all$is.OLL4[i] <- FALSE
  }
}
for (i in 1:length(rownames(cds_OLL_all@phenoData))) {
  if (cds_OLL_all$OLL_group[i] == "OLL5") {
    cds_OLL_all$is.OLL5[i] <- TRUE
  } else {
    cds_OLL_all$is.OLL5[i] <- FALSE
  }
}
for (i in 1:length(rownames(cds_OLL_all@phenoData))) {
  if (cds_OLL_all$OLL_group[i] == "OLL6") {
    cds_OLL_all$is.OLL6[i] <- TRUE
  } else {
    cds_OLL_all$is.OLL6[i] <- FALSE
  }
}
for (i in 1:length(rownames(cds_OLL_all@phenoData))) {
  if (cds_OLL_all$OLL_group[i] == "OLL7") {
    cds_OLL_all$is.OLL7[i] <- TRUE
  } else {
    cds_OLL_all$is.OLL7[i] <- FALSE
  }
}

#Perform differential expression.
OPC_diff_test_monocle <- differentialGeneTest(cds_OLL_all, fullModelFormulaStr = "~is.OPC")
OLL1_diff_test_monocle <- differentialGeneTest(cds_OLL_all, fullModelFormulaStr = "~is.OLL1")
OLL2_diff_test_monocle <- differentialGeneTest(cds_OLL_all, fullModelFormulaStr = "~is.OLL2")
OLL3_diff_test_monocle <- differentialGeneTest(cds_OLL_all, fullModelFormulaStr = "~is.OLL3")
OLL4_diff_test_monocle <- differentialGeneTest(cds_OLL_all, fullModelFormulaStr = "~is.OLL4")
OLL5_diff_test_monocle <- differentialGeneTest(cds_OLL_all, fullModelFormulaStr = "~is.OLL5")
OLL6_diff_test_monocle <- differentialGeneTest(cds_OLL_all, fullModelFormulaStr = "~is.OLL6")
OLL7_diff_test_monocle <- differentialGeneTest(cds_OLL_all, fullModelFormulaStr = "~is.OLL7")


#---------- Seurat Differential Expression ----------


#Format cells and subgroups in a dataframe.
OL_lineage_cells_by_subgroup <- data.frame(rownames(cds_OLL_all@phenoData), cds_OLL_all$OLL_group)


#Subset Seurat object.
CTE_OLL <- SubsetData(CTE.combined, cells = rownames(OL_lineage_cells_by_subgroup))
colnames(OL_lineage_cells_by_subgroup) <- c("names", "subgroups")
rownames(OL_lineage_cells_by_subgroup) <- OL_lineage_cells_by_subgroup$names

#Add OLL subgroup metadata.
CTE_OLL$monocle_OLL_group <- OL_lineage_cells_by_subgroup$subgroups

#Set identities.
Idents(CTE_OLL) <- "monocle_OLL_group"

#Perform differential expression.
OPC_diff_test_Seurat <- FindMarkers(CTE_OLL, ident.1 = "OPC", ident.2 = c("OLL1", "OLL2", "OLL3", "OLL4", "OLL5", "OLL6", "OLL7"), verbose = FALSE, logfc.threshold = 1)
OLL1_diff_test_Seurat <- FindMarkers(CTE_OLL, ident.1 = "OLL1", ident.2 = c("OPC", "OLL2", "OLL3", "OLL4", "OLL5", "OLL6", "OLL7"), verbose = FALSE, logfc.threshold = 1)
OLL2_diff_test_Seurat <- FindMarkers(CTE_OLL, ident.1 = "OLL2", ident.2 = c("OPC", "OLL1", "OLL3", "OLL4", "OLL5", "OLL6", "OLL7"), verbose = FALSE, logfc.threshold = 1)
OLL3_diff_test_Seurat <- FindMarkers(CTE_OLL, ident.1 = "OLL3", ident.2 = c("OPC", "OLL1", "OLL2", "OLL4", "OLL5", "OLL6", "OLL7"), verbose = FALSE, logfc.threshold = 1)
OLL4_diff_test_Seurat <- FindMarkers(CTE_OLL, ident.1 = "OLL4", ident.2 = c("OPC", "OLL1", "OLL2", "OLL3", "OLL5", "OLL6", "OLL7"), verbose = FALSE, logfc.threshold = 1)
OLL5_diff_test_Seurat <- FindMarkers(CTE_OLL, ident.1 = "OLL5", ident.2 = c("OPC", "OLL1", "OLL2", "OLL3", "OLL4", "OLL6", "OLL7"), verbose = FALSE, logfc.threshold = 1)
OLL6_diff_test_Seurat <- FindMarkers(CTE_OLL, ident.1 = "OLL6", ident.2 = c("OPC", "OLL1", "OLL2", "OLL3", "OLL4", "OLL5", "OLL7"), verbose = FALSE, logfc.threshold = 1)
OLL7_diff_test_Seurat <- FindMarkers(CTE_OLL, ident.1 = "OLL7", ident.2 = c("OPC", "OLL1", "OLL2", "OLL3", "OLL4", "OLL5", "OLL6"), verbose = FALSE, logfc.threshold = 1)
